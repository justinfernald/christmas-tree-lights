{"version":3,"file":"freemarker2-DOdTBvuH.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/freemarker2/freemarker2.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/freemarker2/freemarker2.ts\nvar EMPTY_ELEMENTS = [\n  \"assign\",\n  \"flush\",\n  \"ftl\",\n  \"return\",\n  \"global\",\n  \"import\",\n  \"include\",\n  \"break\",\n  \"continue\",\n  \"local\",\n  \"nested\",\n  \"nt\",\n  \"setting\",\n  \"stop\",\n  \"t\",\n  \"lt\",\n  \"rt\",\n  \"fallback\"\n];\nvar BLOCK_ELEMENTS = [\n  \"attempt\",\n  \"autoesc\",\n  \"autoEsc\",\n  \"compress\",\n  \"comment\",\n  \"escape\",\n  \"noescape\",\n  \"function\",\n  \"if\",\n  \"list\",\n  \"items\",\n  \"sep\",\n  \"macro\",\n  \"noparse\",\n  \"noParse\",\n  \"noautoesc\",\n  \"noAutoEsc\",\n  \"outputformat\",\n  \"switch\",\n  \"visit\",\n  \"recurse\"\n];\nvar TagSyntaxAngle = {\n  close: \">\",\n  id: \"angle\",\n  open: \"<\"\n};\nvar TagSyntaxBracket = {\n  close: \"\\\\]\",\n  id: \"bracket\",\n  open: \"\\\\[\"\n};\nvar TagSyntaxAuto = {\n  close: \"[>\\\\]]\",\n  id: \"auto\",\n  open: \"[<\\\\[]\"\n};\nvar InterpolationSyntaxDollar = {\n  close: \"\\\\}\",\n  id: \"dollar\",\n  open1: \"\\\\$\",\n  open2: \"\\\\{\"\n};\nvar InterpolationSyntaxBracket = {\n  close: \"\\\\]\",\n  id: \"bracket\",\n  open1: \"\\\\[\",\n  open2: \"=\"\n};\nfunction createLangConfiguration(ts) {\n  return {\n    brackets: [\n      [\"<\", \">\"],\n      [\"[\", \"]\"],\n      [\"(\", \")\"],\n      [\"{\", \"}\"]\n    ],\n    comments: {\n      blockComment: [`${ts.open}--`, `--${ts.close}`]\n    },\n    autoCloseBefore: \"\\n\\r\t }]),.:;=\",\n    autoClosingPairs: [\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: '\"', close: '\"', notIn: [\"string\"] },\n      { open: \"'\", close: \"'\", notIn: [\"string\"] }\n    ],\n    surroundingPairs: [\n      { open: '\"', close: '\"' },\n      { open: \"'\", close: \"'\" },\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: \"<\", close: \">\" }\n    ],\n    folding: {\n      markers: {\n        start: new RegExp(`${ts.open}#(?:${BLOCK_ELEMENTS.join(\"|\")})([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n        end: new RegExp(`${ts.open}/#(?:${BLOCK_ELEMENTS.join(\"|\")})[\\\\r\\\\n\\\\t ]*>`)\n      }\n    },\n    onEnterRules: [\n      {\n        beforeText: new RegExp(`${ts.open}#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n        afterText: new RegExp(`^${ts.open}/#([a-zA-Z_]+)[\\\\r\\\\n\\\\t ]*${ts.close}$`),\n        action: {\n          indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n        }\n      },\n      {\n        beforeText: new RegExp(`${ts.open}#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n        action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n      }\n    ]\n  };\n}\nfunction createLangConfigurationAuto() {\n  return {\n    brackets: [\n      [\"<\", \">\"],\n      [\"[\", \"]\"],\n      [\"(\", \")\"],\n      [\"{\", \"}\"]\n    ],\n    autoCloseBefore: \"\\n\\r\t }]),.:;=\",\n    autoClosingPairs: [\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: '\"', close: '\"', notIn: [\"string\"] },\n      { open: \"'\", close: \"'\", notIn: [\"string\"] }\n    ],\n    surroundingPairs: [\n      { open: '\"', close: '\"' },\n      { open: \"'\", close: \"'\" },\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: \"<\", close: \">\" }\n    ],\n    folding: {\n      markers: {\n        start: new RegExp(`[<\\\\[]#(?:${BLOCK_ELEMENTS.join(\"|\")})([^/>\\\\]]*(?!/)[>\\\\]])[^<\\\\[]*$`),\n        end: new RegExp(`[<\\\\[]/#(?:${BLOCK_ELEMENTS.join(\"|\")})[\\\\r\\\\n\\\\t ]*>`)\n      }\n    },\n    onEnterRules: [\n      {\n        beforeText: new RegExp(`[<\\\\[]#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/>\\\\]]*(?!/)[>\\\\]])[^[<\\\\[]]*$`),\n        afterText: new RegExp(`^[<\\\\[]/#([a-zA-Z_]+)[\\\\r\\\\n\\\\t ]*[>\\\\]]$`),\n        action: {\n          indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n        }\n      },\n      {\n        beforeText: new RegExp(`[<\\\\[]#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/>\\\\]]*(?!/)[>\\\\]])[^[<\\\\[]]*$`),\n        action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n      }\n    ]\n  };\n}\nfunction createMonarchLanguage(ts, is) {\n  const id = `_${ts.id}_${is.id}`;\n  const s = (name) => name.replace(/__id__/g, id);\n  const r = (regexp) => {\n    const source = regexp.source.replace(/__id__/g, id);\n    return new RegExp(source, regexp.flags);\n  };\n  return {\n    unicode: true,\n    includeLF: false,\n    start: s(\"default__id__\"),\n    ignoreCase: false,\n    defaultToken: \"invalid\",\n    tokenPostfix: `.freemarker2`,\n    brackets: [\n      { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n      { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n      { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n      { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n    ],\n    [s(\"open__id__\")]: new RegExp(ts.open),\n    [s(\"close__id__\")]: new RegExp(ts.close),\n    [s(\"iOpen1__id__\")]: new RegExp(is.open1),\n    [s(\"iOpen2__id__\")]: new RegExp(is.open2),\n    [s(\"iClose__id__\")]: new RegExp(is.close),\n    [s(\"startTag__id__\")]: r(/(@open__id__)(#)/),\n    [s(\"endTag__id__\")]: r(/(@open__id__)(\\/#)/),\n    [s(\"startOrEndTag__id__\")]: r(/(@open__id__)(\\/?#)/),\n    [s(\"closeTag1__id__\")]: r(/((?:@blank)*)(@close__id__)/),\n    [s(\"closeTag2__id__\")]: r(/((?:@blank)*\\/?)(@close__id__)/),\n    blank: /[ \\t\\n\\r]/,\n    keywords: [\"false\", \"true\", \"in\", \"as\", \"using\"],\n    directiveStartCloseTag1: /attempt|recover|sep|auto[eE]sc|no(?:autoe|AutoE)sc|compress|default|no[eE]scape|comment|no[pP]arse/,\n    directiveStartCloseTag2: /else|break|continue|return|stop|flush|t|lt|rt|nt|nested|recurse|fallback|ftl/,\n    directiveStartBlank: /if|else[iI]f|list|for[eE]ach|switch|case|assign|global|local|include|import|function|macro|transform|visit|stop|return|call|setting|output[fF]ormat|nested|recurse|escape|ftl|items/,\n    directiveEndCloseTag1: /if|list|items|sep|recover|attempt|for[eE]ach|local|global|assign|function|macro|output[fF]ormat|auto[eE]sc|no(?:autoe|AutoE)sc|compress|transform|switch|escape|no[eE]scape/,\n    escapedChar: /\\\\(?:[ntrfbgla\\\\'\"\\{=]|(?:x[0-9A-Fa-f]{1,4}))/,\n    asciiDigit: /[0-9]/,\n    integer: /[0-9]+/,\n    nonEscapedIdStartChar: /[\\$@-Z_a-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u1FFF\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183-\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3006\\u3031-\\u3035\\u303B-\\u303C\\u3040-\\u318F\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3300-\\u337F\\u3400-\\u4DB5\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5-\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n    escapedIdChar: /\\\\[\\-\\.:#]/,\n    idStartChar: /(?:@nonEscapedIdStartChar)|(?:@escapedIdChar)/,\n    id: /(?:@idStartChar)(?:(?:@idStartChar)|(?:@asciiDigit))*/,\n    specialHashKeys: /\\*\\*|\\*|false|true|in|as|using/,\n    namedSymbols: /&lt;=|&gt;=|\\\\lte|\\\\lt|&lt;|\\\\gte|\\\\gt|&gt;|&amp;&amp;|\\\\and|-&gt;|->|==|!=|\\+=|-=|\\*=|\\/=|%=|\\+\\+|--|<=|&&|\\|\\||:|\\.\\.\\.|\\.\\.\\*|\\.\\.<|\\.\\.!|\\?\\?|=|<|\\+|-|\\*|\\/|%|\\||\\.\\.|\\?|!|&|\\.|,|;/,\n    arrows: [\"->\", \"-&gt;\"],\n    delimiters: [\";\", \":\", \",\", \".\"],\n    stringOperators: [\"lte\", \"lt\", \"gte\", \"gt\"],\n    noParseTags: [\"noparse\", \"noParse\", \"comment\"],\n    tokenizer: {\n      [s(\"default__id__\")]: [\n        { include: s(\"@directive_token__id__\") },\n        { include: s(\"@interpolation_and_text_token__id__\") }\n      ],\n      [s(\"fmExpression__id__.directive\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@directive_end_token__id__\") },\n        { include: s(\"@expression_token__id__\") }\n      ],\n      [s(\"fmExpression__id__.interpolation\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@expression_token__id__\") },\n        { include: s(\"@greater_operators_token__id__\") }\n      ],\n      [s(\"inParen__id__.plain\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@directive_end_token__id__\") },\n        { include: s(\"@expression_token__id__\") }\n      ],\n      [s(\"inParen__id__.gt\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@expression_token__id__\") },\n        { include: s(\"@greater_operators_token__id__\") }\n      ],\n      [s(\"noSpaceExpression__id__\")]: [\n        { include: s(\"@no_space_expression_end_token__id__\") },\n        { include: s(\"@directive_end_token__id__\") },\n        { include: s(\"@expression_token__id__\") }\n      ],\n      [s(\"unifiedCall__id__\")]: [{ include: s(\"@unified_call_token__id__\") }],\n      [s(\"singleString__id__\")]: [{ include: s(\"@string_single_token__id__\") }],\n      [s(\"doubleString__id__\")]: [{ include: s(\"@string_double_token__id__\") }],\n      [s(\"rawSingleString__id__\")]: [{ include: s(\"@string_single_raw_token__id__\") }],\n      [s(\"rawDoubleString__id__\")]: [{ include: s(\"@string_double_raw_token__id__\") }],\n      [s(\"expressionComment__id__\")]: [{ include: s(\"@expression_comment_token__id__\") }],\n      [s(\"noParse__id__\")]: [{ include: s(\"@no_parse_token__id__\") }],\n      [s(\"terseComment__id__\")]: [{ include: s(\"@terse_comment_token__id__\") }],\n      [s(\"directive_token__id__\")]: [\n        [\n          r(/(?:@startTag__id__)(@directiveStartCloseTag1)(?:@closeTag1__id__)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            {\n              cases: {\n                \"@noParseTags\": { token: \"tag\", next: s(\"@noParse__id__.$3\") },\n                \"@default\": { token: \"tag\" }\n              }\n            },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(?:@startTag__id__)(@directiveStartCloseTag2)(?:@closeTag2__id__)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(?:@startTag__id__)(@directiveStartBlank)(@blank)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"\", next: s(\"@fmExpression__id__.directive\") }\n          ]\n        ],\n        [\n          r(/(?:@endTag__id__)(@directiveEndCloseTag1)(?:@closeTag1__id__)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(@open__id__)(@)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\", next: s(\"@unifiedCall__id__\") }\n          ]\n        ],\n        [\n          r(/(@open__id__)(\\/@)((?:(?:@id)(?:\\.(?:@id))*)?)(?:@closeTag1__id__)/),\n          [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(@open__id__)#--/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : { token: \"comment\", next: s(\"@terseComment__id__\") }\n        ],\n        [\n          r(/(?:@startOrEndTag__id__)([a-zA-Z_]+)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag.invalid\", next: s(\"@fmExpression__id__.directive\") }\n          ]\n        ]\n      ],\n      [s(\"interpolation_and_text_token__id__\")]: [\n        [\n          r(/(@iOpen1__id__)(@iOpen2__id__)/),\n          [\n            { token: is.id === \"bracket\" ? \"@brackets.interpolation\" : \"delimiter.interpolation\" },\n            {\n              token: is.id === \"bracket\" ? \"delimiter.interpolation\" : \"@brackets.interpolation\",\n              next: s(\"@fmExpression__id__.interpolation\")\n            }\n          ]\n        ],\n        [/[\\$#<\\[\\{]|(?:@blank)+|[^\\$<#\\[\\{\\n\\r\\t ]+/, { token: \"source\" }]\n      ],\n      [s(\"string_single_token__id__\")]: [\n        [/[^'\\\\]/, { token: \"string\" }],\n        [/@escapedChar/, { token: \"string.escape\" }],\n        [/'/, { token: \"string\", next: \"@pop\" }]\n      ],\n      [s(\"string_double_token__id__\")]: [\n        [/[^\"\\\\]/, { token: \"string\" }],\n        [/@escapedChar/, { token: \"string.escape\" }],\n        [/\"/, { token: \"string\", next: \"@pop\" }]\n      ],\n      [s(\"string_single_raw_token__id__\")]: [\n        [/[^']+/, { token: \"string.raw\" }],\n        [/'/, { token: \"string.raw\", next: \"@pop\" }]\n      ],\n      [s(\"string_double_raw_token__id__\")]: [\n        [/[^\"]+/, { token: \"string.raw\" }],\n        [/\"/, { token: \"string.raw\", next: \"@pop\" }]\n      ],\n      [s(\"expression_token__id__\")]: [\n        [\n          /(r?)(['\"])/,\n          {\n            cases: {\n              \"r'\": [\n                { token: \"keyword\" },\n                { token: \"string.raw\", next: s(\"@rawSingleString__id__\") }\n              ],\n              'r\"': [\n                { token: \"keyword\" },\n                { token: \"string.raw\", next: s(\"@rawDoubleString__id__\") }\n              ],\n              \"'\": [{ token: \"source\" }, { token: \"string\", next: s(\"@singleString__id__\") }],\n              '\"': [{ token: \"source\" }, { token: \"string\", next: s(\"@doubleString__id__\") }]\n            }\n          }\n        ],\n        [\n          /(?:@integer)(?:\\.(?:@integer))?/,\n          {\n            cases: {\n              \"(?:@integer)\": { token: \"number\" },\n              \"@default\": { token: \"number.float\" }\n            }\n          }\n        ],\n        [\n          /(\\.)(@blank*)(@specialHashKeys)/,\n          [{ token: \"delimiter\" }, { token: \"\" }, { token: \"identifier\" }]\n        ],\n        [\n          /(?:@namedSymbols)/,\n          {\n            cases: {\n              \"@arrows\": { token: \"meta.arrow\" },\n              \"@delimiters\": { token: \"delimiter\" },\n              \"@default\": { token: \"operators\" }\n            }\n          }\n        ],\n        [\n          /@id/,\n          {\n            cases: {\n              \"@keywords\": { token: \"keyword.$0\" },\n              \"@stringOperators\": { token: \"operators\" },\n              \"@default\": { token: \"identifier\" }\n            }\n          }\n        ],\n        [\n          /[\\[\\]\\(\\)\\{\\}]/,\n          {\n            cases: {\n              \"\\\\[\": {\n                cases: {\n                  \"$S2==gt\": { token: \"@brackets\", next: s(\"@inParen__id__.gt\") },\n                  \"@default\": { token: \"@brackets\", next: s(\"@inParen__id__.plain\") }\n                }\n              },\n              \"\\\\]\": {\n                cases: {\n                  ...is.id === \"bracket\" ? {\n                    \"$S2==interpolation\": { token: \"@brackets.interpolation\", next: \"@popall\" }\n                  } : {},\n                  ...ts.id === \"bracket\" ? {\n                    \"$S2==directive\": { token: \"@brackets.directive\", next: \"@popall\" }\n                  } : {},\n                  [s(\"$S1==inParen__id__\")]: { token: \"@brackets\", next: \"@pop\" },\n                  \"@default\": { token: \"@brackets\" }\n                }\n              },\n              \"\\\\(\": { token: \"@brackets\", next: s(\"@inParen__id__.gt\") },\n              \"\\\\)\": {\n                cases: {\n                  [s(\"$S1==inParen__id__\")]: { token: \"@brackets\", next: \"@pop\" },\n                  \"@default\": { token: \"@brackets\" }\n                }\n              },\n              \"\\\\{\": {\n                cases: {\n                  \"$S2==gt\": { token: \"@brackets\", next: s(\"@inParen__id__.gt\") },\n                  \"@default\": { token: \"@brackets\", next: s(\"@inParen__id__.plain\") }\n                }\n              },\n              \"\\\\}\": {\n                cases: {\n                  ...is.id === \"bracket\" ? {} : {\n                    \"$S2==interpolation\": { token: \"@brackets.interpolation\", next: \"@popall\" }\n                  },\n                  [s(\"$S1==inParen__id__\")]: { token: \"@brackets\", next: \"@pop\" },\n                  \"@default\": { token: \"@brackets\" }\n                }\n              }\n            }\n          }\n        ],\n        [/\\$\\{/, { token: \"delimiter.invalid\" }]\n      ],\n      [s(\"blank_and_expression_comment_token__id__\")]: [\n        [/(?:@blank)+/, { token: \"\" }],\n        [/[<\\[][#!]--/, { token: \"comment\", next: s(\"@expressionComment__id__\") }]\n      ],\n      [s(\"directive_end_token__id__\")]: [\n        [\n          />/,\n          ts.id === \"bracket\" ? { token: \"operators\" } : { token: \"@brackets.directive\", next: \"@popall\" }\n        ],\n        [\n          r(/(\\/)(@close__id__)/),\n          [{ token: \"delimiter.directive\" }, { token: \"@brackets.directive\", next: \"@popall\" }]\n        ]\n      ],\n      [s(\"greater_operators_token__id__\")]: [\n        [/>/, { token: \"operators\" }],\n        [/>=/, { token: \"operators\" }]\n      ],\n      [s(\"no_space_expression_end_token__id__\")]: [\n        [/(?:@blank)+/, { token: \"\", switchTo: s(\"@fmExpression__id__.directive\") }]\n      ],\n      [s(\"unified_call_token__id__\")]: [\n        [\n          /(@id)((?:@blank)+)/,\n          [{ token: \"tag\" }, { token: \"\", next: s(\"@fmExpression__id__.directive\") }]\n        ],\n        [\n          r(/(@id)(\\/?)(@close__id__)/),\n          [\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\", next: \"@popall\" }\n          ]\n        ],\n        [/./, { token: \"@rematch\", next: s(\"@noSpaceExpression__id__\") }]\n      ],\n      [s(\"no_parse_token__id__\")]: [\n        [\n          r(/(@open__id__)(\\/#?)([a-zA-Z]+)((?:@blank)*)(@close__id__)/),\n          {\n            cases: {\n              \"$S2==$3\": [\n                { token: \"@brackets.directive\" },\n                { token: \"delimiter.directive\" },\n                { token: \"tag\" },\n                { token: \"\" },\n                { token: \"@brackets.directive\", next: \"@popall\" }\n              ],\n              \"$S2==comment\": [\n                { token: \"comment\" },\n                { token: \"comment\" },\n                { token: \"comment\" },\n                { token: \"comment\" },\n                { token: \"comment\" }\n              ],\n              \"@default\": [\n                { token: \"source\" },\n                { token: \"source\" },\n                { token: \"source\" },\n                { token: \"source\" },\n                { token: \"source\" }\n              ]\n            }\n          }\n        ],\n        [\n          /[^<\\[\\-]+|[<\\[\\-]/,\n          {\n            cases: {\n              \"$S2==comment\": { token: \"comment\" },\n              \"@default\": { token: \"source\" }\n            }\n          }\n        ]\n      ],\n      [s(\"expression_comment_token__id__\")]: [\n        [\n          /--[>\\]]/,\n          {\n            token: \"comment\",\n            next: \"@pop\"\n          }\n        ],\n        [/[^\\->\\]]+|[>\\]\\-]/, { token: \"comment\" }]\n      ],\n      [s(\"terse_comment_token__id__\")]: [\n        [r(/--(?:@close__id__)/), { token: \"comment\", next: \"@popall\" }],\n        [/[^<\\[\\-]+|[<\\[\\-]/, { token: \"comment\" }]\n      ]\n    }\n  };\n}\nfunction createMonarchLanguageAuto(is) {\n  const angle = createMonarchLanguage(TagSyntaxAngle, is);\n  const bracket = createMonarchLanguage(TagSyntaxBracket, is);\n  const auto = createMonarchLanguage(TagSyntaxAuto, is);\n  return {\n    ...angle,\n    ...bracket,\n    ...auto,\n    unicode: true,\n    includeLF: false,\n    start: `default_auto_${is.id}`,\n    ignoreCase: false,\n    defaultToken: \"invalid\",\n    tokenPostfix: `.freemarker2`,\n    brackets: [\n      { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n      { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n      { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n      { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n    ],\n    tokenizer: {\n      ...angle.tokenizer,\n      ...bracket.tokenizer,\n      ...auto.tokenizer\n    }\n  };\n}\nvar TagAngleInterpolationDollar = {\n  conf: createLangConfiguration(TagSyntaxAngle),\n  language: createMonarchLanguage(TagSyntaxAngle, InterpolationSyntaxDollar)\n};\nvar TagBracketInterpolationDollar = {\n  conf: createLangConfiguration(TagSyntaxBracket),\n  language: createMonarchLanguage(TagSyntaxBracket, InterpolationSyntaxDollar)\n};\nvar TagAngleInterpolationBracket = {\n  conf: createLangConfiguration(TagSyntaxAngle),\n  language: createMonarchLanguage(TagSyntaxAngle, InterpolationSyntaxBracket)\n};\nvar TagBracketInterpolationBracket = {\n  conf: createLangConfiguration(TagSyntaxBracket),\n  language: createMonarchLanguage(TagSyntaxBracket, InterpolationSyntaxBracket)\n};\nvar TagAutoInterpolationDollar = {\n  conf: createLangConfigurationAuto(),\n  language: createMonarchLanguageAuto(InterpolationSyntaxDollar)\n};\nvar TagAutoInterpolationBracket = {\n  conf: createLangConfigurationAuto(),\n  language: createMonarchLanguageAuto(InterpolationSyntaxBracket)\n};\nexport {\n  TagAngleInterpolationBracket,\n  TagAngleInterpolationDollar,\n  TagAutoInterpolationBracket,\n  TagAutoInterpolationDollar,\n  TagBracketInterpolationBracket,\n  TagBracketInterpolationDollar\n};\n"],"names":["__defProp","__getOwnPropDesc","__getOwnPropNames","__hasOwnProp","__copyProps","to","from","except","desc","key","__reExport","target","mod","secondTarget","monaco_editor_core_exports","monaco_editor_core_star","EMPTY_ELEMENTS","BLOCK_ELEMENTS","TagSyntaxAngle","TagSyntaxBracket","TagSyntaxAuto","InterpolationSyntaxDollar","InterpolationSyntaxBracket","createLangConfiguration","ts","createLangConfigurationAuto","createMonarchLanguage","is","id","s","name","r","regexp","source","createMonarchLanguageAuto","angle","bracket","auto","TagAngleInterpolationDollar","TagBracketInterpolationDollar","TagAngleInterpolationBracket","TagBracketInterpolationBracket","TagAutoInterpolationDollar","TagAutoInterpolationBracket"],"mappings":"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","x_google_ignoreList":[0]}